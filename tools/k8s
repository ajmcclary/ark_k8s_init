#!/bin/bash
#
# This script allows you to rapidly control K8s and Docker as a unit, enabling you
# to bring the entire ecosystem up or down with a single command.
#

CALLED="${BASH_SOURCE:-${0}}"
CMD_PREFIX="__cmd_"

set -euo pipefail

say()
{
	echo -e "${@}"
}

__cmd_start()
{
	if [[ "$OSTYPE" == "darwin"* ]]; then
		say "Starting Docker Desktop and Kubernetes..."
		open -a Docker
		say "Please ensure Docker Desktop is running with Kubernetes enabled"
	else
		say "Starting K8s services and pods..."
		( set -x ; sudo systemctl start {,cri-}docker.s{ervice,ocket} kubelet.service )
	fi
}

__cmd_stop()
{
	if [[ "$OSTYPE" == "darwin"* ]]; then
		say "Stopping Docker Desktop..."
		osascript -e 'quit app "Docker"'
	else
		say "Stopping K8s services and pods..."
		( set -x ; sudo systemctl stop kubelet.service {cri-,}docker.s{ocket,ervice} )
	fi
}

__cmd_unjam()
{
	say "Restarting the Calico Node pods..."
	kubectl --context "local" delete pod -n calico-system -l k8s-app=calico-node
	say "Restarting the Calico Typha pods..."
	kubectl --context "local" delete pod -n calico-system -l k8s-app=calico-typha
}

__cmd_restart()
{
	__cmd_stop
	__cmd_start
}

__cmd_help()
{
	local FUNCTIONS=()
	readarray -t FUNCTIONS < <(compgen -A function | grep "^${CMD_PREFIX}" | sort | sed -e "s;^${CMD_PREFIX};;g")
	say "usage: ${CALLED} ($(IFS="|" ; echo "${FUNCTIONS[*]}"))" 1>&2
	exit 1
}

[ ${#} -ge 1 ] || set -- "help"

FUNC="${CMD_PREFIX}${1}"
shift

[ "$(type -t "${FUNC}")" == "function" ] || __cmd_help
"${FUNC}" "${@}"
exit ${?}
