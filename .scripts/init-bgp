#!/bin/bash
# macOS compatible readlink
if [[ "$OSTYPE" == "darwin"* ]]; then
    SCRIPT="$(python3 -c "import os; print(os.path.realpath('${0}'))")"
else
    SCRIPT="$(readlink -f "${0}")"
fi
BASEDIR="$(dirname "${SCRIPT}")"
SCRIPT="$(basename "${SCRIPT}")"

set -e -o pipefail

echo_run()
{
	local ARGS=("${@}")
	echo "${ARGS[@]@Q}"
	"${@}"
}

if [ ${#} -lt 1 ] ; then
	echo -e "usage: ${BASH_ARGV0} peer-ip-1 [peer-ip-2 peer-ip-3 ... peer-ip-N]"
	exit 1
fi

# Apply the Calico configs to allow for BGP peering
# by the external HAProxy ingress controller (add a copy for each BGP peer, adjusted)
(
	cat <<EOF
---
apiVersion: projectcalico.org/v3
kind: BGPConfiguration
metadata:
  name: default
spec:
  logSeverityScreen: Info
  nodeToNodeMeshEnabled: true
  asNumber: 65000
EOF

	FORMAT="$(printf "%d" $(( ${#} + 1 )) )"
	FORMAT="$(printf "%%0%dd" ${#FORMAT})"

	for PEER in "${@}" ; do
		# TODO: Check if the peer is a valid IP address ...
		# TODO: If the peer is not a valid IP, gripe to STDERR and skip it

		(( i++ )) || true
		I="$(printf "${FORMAT}" ${i})"
		cat <<EOF
---
# Repeat this one for each peer node
apiVersion: projectcalico.org/v3
kind: BGPPeer
metadata:
  name: haproxy-peer-${I}
spec:
  peerIP: ${PEER}
  asNumber: 65000
EOF
	done
) | tee >(echo_run kubectl --context "local" apply -f -)
