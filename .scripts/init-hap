#!/bin/bash
# macOS compatible readlink
if [[ "$OSTYPE" == "darwin"* ]]; then
    SCRIPT="$(python3 -c "import os; print(os.path.realpath('${BASH_ARGV0:-${0}}'))")"
else
    SCRIPT="$(readlink -f "${BASH_ARGV0:-${0}}")"
fi
BASEDIR="$(dirname "${SCRIPT}")"
SCRIPT="$(basename "${SCRIPT}")"

set -e -o pipefail

echo_run()
{
	local ARGS=("${@}")
	echo "${ARGS[@]@Q}"
	"${@}"
}

[ ${#} -ge 1 ] && HAP_VALUES="${1}"

REPO_NAME="haproxy-ingress"
REPO_URL="https://haproxy-ingress.github.io/charts"
[ -v HAP_APP_NAME ] || HAP_APP_NAME="haproxy-ingress"
[ -v HAP_APP_NS ] || HAP_APP_NS="ingress-controller"
[ -v HAP_VALUES ] || HAP_VALUES="haproxy-ingress-values.yaml"

helm repo list | egrep -q "[[:space:]]https://haproxy-ingress.github.io/charts/?[[:space:]]*$" || helm repo add "${REPO_NAME}" "${REPO_URL}"
if [ -f "${HAP_VALUES}" ] ; then
	HAP_VALUES=(-f "${HAP_VALUES}")
else
	HAP_VALUES=()
fi

[ -n "${INGRESS_CLASS_NAME}" ] || INGRESS_CLASS_NAME="haproxy"

[ -v DEFAULT ] || DEFAULT=""
[ -n "${DEFAULT}" ] || DEFAULT="true"
case "${DEFAULT,,}" in
	true | t | yes | y | 1 ) DEFAULT="true" ;;
	* ) DEFAULT="false" ;;
esac

echo_run kubectl --context "local" delete -n "${HAP_APP_NS}" IngressClass "${INGRESS_CLASS_NAME}" || true
echo_run kubectl --context "local" delete -n "${HAP_APP_NS}" configmap "${HAP_APP_NAME}" || true
echo_run kubectl --context "local" create -f - <<EOF
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: "${INGRESS_CLASS_NAME}"
  annotations:
    ingressclass.kubernetes.io/is-default-class: "${DEFAULT}"
spec:
  controller: haproxy-ingress.github.io/controller
  parameters:
    kind: ConfigMap
    name: "${HAP_APP_NAME}"
EOF

echo_run helm upgrade --install \
	--kube-context "local" \
	"${HAP_APP_NAME}" \
	haproxy-ingress/haproxy-ingress \
	--create-namespace --namespace "${HAP_APP_NS}" \
	"${HAP_VALUES[@]}"
